// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  firstname    String
  lastname     String
  role         Role          @default(STANDARD_USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  department   Department    @relation(fields: [departmentId], references: [id])
  departmentId Int
  app          Accountable[]
  application  Application[]
}

enum Role {
  ARCHITECT
  IT_ACCOUNTABLE
  BUSINESS_ACCOUNTABLE
  STANDARD_USER
}

model Department {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  user               User[]
  businessCapability BusinessCapability[]
}

model BusinessCapability {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  department   Department    @relation(fields: [departmentId], references: [id])
  departmentId Int
  application  Application[]
}

model Accountable {
  app       Application @relation(fields: [appId], references: [id])
  appId     Int
  pic       User?       @relation(fields: [picId], references: [id])
  picId     Int?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@id([appId])
}

model Application {
  id                   Int                 @id @default(autoincrement())
  name                 String              @unique
  description          String?
  version              String?
  contractType         ContractType?
  state                State
  criticality          Criticality
  validationStatus     ValidationStatus
  hostingType          HostingType?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  author               User                @relation(fields: [authorId], references: [id])
  authorId             Int
  businessCapability   BusinessCapability? @relation(fields: [businessCapabilityId], references: [id])
  businessCapabilityId Int?
  provider             Provider?           @relation(fields: [providerId], references: [id])
  providerId           Int?
  applicationType      ApplicationType     @relation(fields: [applicationTypeId], references: [id])
  applicationTypeId    Int
  pic                  Accountable[]
  language             Language[]
  software             Software[]
}

enum ContractType {
  FREEWARE
  OPEN_SOURCE
  COMMERCIAL
  INTERNAL
  EXTERNAL
  UNKNOWN
}

enum State {
  PROD
  DEV
  DEPRECATED
  MAINTENANCE
  UNKNOWN
}

enum ValidationStatus {
  DRAFT
  VALIDATED
  TO_BE_VALIDATED
  REJECTED
  ARCHIVED
  UNKNOWN
}

enum Criticality {
  HIGH
  MEDIUM
  LOW
  UNKNOWN
}

enum HostingType {
  ON_PREMISE
  CLOUD
  HYBRID
  UNKNOWN
}

model ApplicationType {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  application Application[]
}

model Provider {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  location    String?
  logo        String?
  description String?
  url         String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  application Application[]
}

model Language {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  application Application[]
}

model Software {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String?
  version     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  application Application[]
}
